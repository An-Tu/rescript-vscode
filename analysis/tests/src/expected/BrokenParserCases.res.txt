Dump AST src/BrokenParserCases.res 2:24

Source:
// let _ = someFn(~isOff=, ())
//                      ^ast

<*>Pstr_value(
  value:
    Ppat_any
  expr:
    <*>Pexp_apply(
      expr:
        Pexp_ident:someFn
      args:
        <*>~isOff=
          [@ns.namedArgLoc]Pexp_construct(())
    )
)

Dump AST src/BrokenParserCases.res 6:17

Source:
// switch s { | (t) }
//               ^ast

<*>Pstr_eval(
<*>Pexp_match(Pexp_ident:s)
    case 1:
      pattern<*>:
        <*>Ppat_var(<*>t)
      expr<x>:
        <x>Pexp_extension(%<x>rescript.exprhole)
)

Dump AST src/BrokenParserCases.res 10:29

Source:
// let _ = switch x { | None |  => None }
//                           ^ast

<*>Pstr_value(
  value:
    Ppat_any
  expr:
    <*>Pexp_match(Pexp_ident:x)
      case 1:
        pattern<*>:
          <*>Ppat_or(
        Ppat_construct(None),
        Ppat_construct(None)
      )
        expr<x>:
          <x>Pexp_extension(%<x>rescript.exprhole)
)

